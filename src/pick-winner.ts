import { BlockFrostAPI } from '@blockfrost/blockfrost-js'
import { pickNRandom } from './utils/array'
import { getAllNFTAssetIds } from './utils/blockfrost-utils'
import 'dotenv/config'

type Wallet = {
  stakeAddress: string | null
  bech32Addresses: string[]
}

const { BLOCKFROST_SECRET } = process.env
if (!BLOCKFROST_SECRET)
  throw new Error('Blockfrost secret not set. Create a .env file with and set "BLOCKFROST_SECRET"')

const blockfrost = new BlockFrostAPI({ projectId: BLOCKFROST_SECRET })

async function getWalletFromAssetId(assetId: string): Promise<Wallet | null> {
  const addresses = (await blockfrost.assetsAddresses(assetId)).map(address => address.address)
  if (!addresses || !addresses.length) return null
  const specificAddress = await blockfrost.addresses(addresses[0])
  return {
    stakeAddress: specificAddress.stake_address,
    bech32Addresses: addresses,
  }
}

async function pickRandomWinner(policyId: string, n: number, assetIdBlacklist: string[] | undefined): Promise<Wallet[]> {
  let assetIds = await getAllNFTAssetIds(blockfrost, policyId)

  // Filter asset ids based on blacklist
  if (assetIdBlacklist) {
    assetIds = assetIds.filter(assetId => !assetIdBlacklist.includes(assetId))
  }

  const selectedAssetIds = pickNRandom(assetIds, n)
  const wallets = [] as Wallet[]
  for await (const assetId of selectedAssetIds) {
    const wallet = await getWalletFromAssetId(assetId)
    if (!wallet) continue
    wallets.push(wallet)
  }
  return wallets
}

async function run(policyId: string, n: number, assetIdBlacklist?: string[] | undefined) {
  const winnerWallets = await pickRandomWinner(policyId, n, assetIdBlacklist)
  console.log(winnerWallets)
}

const assetIdBlacklist = [
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e31',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3032',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e33',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e34',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e35',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e36',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e37',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e38',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e39',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3130',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3131',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3132',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3133',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3134',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3135',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3136',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3137',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3138',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3139',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3230',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3231',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3232',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3233',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3234',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3235',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3236',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3237',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3238',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3239',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3330',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3331',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3332',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3333',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3334',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3335',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3336',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3337',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3338',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3339',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3430',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3432',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e303432',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3433',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303433',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3434',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303434',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3435',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303435',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3436',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303436',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303437',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3437',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3438',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303438',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303439',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3439',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3530',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303530',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e3531',
  // in BTL wallet (due to refund)
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303531',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303532',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303536',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303633',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303636',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303637', // 1 legendary (67)
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303730',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303731',
  '8e74c085955f44ca165ef411bbea170218e00b6fc435749356c315684269746c616e647341314e30303932', // 1 legendary (92)
]

run('8e74c085955f44ca165ef411bbea170218e00b6fc435749356c31568', 2, assetIdBlacklist)
